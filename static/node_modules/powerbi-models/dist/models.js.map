{"version":3,"sources":["webpack://powerbi-models/webpack/universalModuleDefinition","webpack://powerbi-models/webpack/bootstrap","webpack://powerbi-models/./src/models.ts","webpack://powerbi-models/./src/validators/core/validator.ts","webpack://powerbi-models/./src/validators/core/typeValidator.ts","webpack://powerbi-models/./src/validators/models/extensionsValidator.ts","webpack://powerbi-models/./src/validators/core/multipleFieldsValidator.ts","webpack://powerbi-models/./src/validators/models/settingsValidator.ts","webpack://powerbi-models/./src/validators/models/bookmarkValidator.ts","webpack://powerbi-models/./src/validators/models/filtersValidator.ts","webpack://powerbi-models/./src/validators/core/fieldRequiredValidator.ts","webpack://powerbi-models/./src/validators/core/anyOfValidator.ts","webpack://powerbi-models/./src/validators/models/reportLoadValidator.ts","webpack://powerbi-models/./src/validators/models/reportCreateValidator.ts","webpack://powerbi-models/./src/validators/models/dashboardLoadValidator.ts","webpack://powerbi-models/./src/validators/models/tileLoadValidator.ts","webpack://powerbi-models/./src/validators/models/pageValidator.ts","webpack://powerbi-models/./src/validators/models/qnaValidator.ts","webpack://powerbi-models/./src/validators/models/saveAsParametersValidator.ts","webpack://powerbi-models/./src/validators/core/mapValidator.ts","webpack://powerbi-models/./src/validators/models/layoutValidator.ts","webpack://powerbi-models/./src/validators/models/exportDataValidator.ts","webpack://powerbi-models/./src/validators/models/selectorsValidator.ts","webpack://powerbi-models/./src/validators/models/slicersValidator.ts","webpack://powerbi-models/./src/validators/models/visualSettingsValidator.ts","webpack://powerbi-models/./src/validators/models/commandsSettingsValidator.ts","webpack://powerbi-models/./src/validators/models/customThemeValidator.ts","webpack://powerbi-models/./src/validators/models/datasetBindingValidator.ts","webpack://powerbi-models/./src/validators/models/panesValidator.ts","webpack://powerbi-models/./src/validators/models/barsValidator.ts"],"names":[],"mappings":"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","file":"models.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"powerbi-models\"] = factory();\n\telse\n\t\troot[\"powerbi-models\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","declare var require: Function;\r\n\r\nexport const Validators = require('./validators/core/validator').Validators;\r\n\r\nexport type KeyValuePair = {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\nexport interface ITechnicalDetails {\r\n  requestId?: string;\r\n  errorInfo?: KeyValuePair[];\r\n}\r\n\r\nexport interface IError {\r\n  message: string;\r\n  detailedMessage?: string;\r\n  errorCode?: string;\r\n  level?: TraceType;\r\n  technicalDetails?: ITechnicalDetails;\r\n}\r\n\r\nexport enum TraceType {\r\n  Information = 0,\r\n  Verbose = 1,\r\n  Warning = 2,\r\n  Error = 3,\r\n  ExpectedError = 4,\r\n  UnexpectedError = 5,\r\n  Fatal = 6,\r\n}\r\n\r\nexport enum PageSizeType {\r\n  Widescreen,\r\n  Standard,\r\n  Cortana,\r\n  Letter,\r\n  Custom\r\n}\r\n\r\nexport enum DisplayOption {\r\n  FitToPage,\r\n  FitToWidth,\r\n  ActualSize\r\n}\r\n\r\nexport enum BackgroundType {\r\n  Default,\r\n  Transparent\r\n}\r\n\r\nexport interface IPageSize {\r\n  type: PageSizeType;\r\n}\r\n\r\nexport interface ICustomPageSize extends IPageSize {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport type PagesLayout = { [key: string]: IPageLayout; };\r\nexport type VisualsLayout = { [key: string]: IVisualLayout; };\r\n\r\nexport interface IPageLayout {\r\n  defaultLayout?: IVisualLayout;\r\n  visualsLayout: VisualsLayout;\r\n}\r\n\r\nexport enum VisualContainerDisplayMode {\r\n  Visible,\r\n  Hidden\r\n}\r\n\r\nexport enum LayoutType {\r\n  Master,\r\n  Custom,\r\n  MobilePortrait,\r\n  MobileLandscape\r\n}\r\n\r\nexport enum HyperlinkClickBehavior {\r\n  Navigate,\r\n  NavigateAndRaiseEvent,\r\n  RaiseEvent\r\n}\r\n\r\nexport interface IVisualLayout {\r\n  x?: number;\r\n  y?: number;\r\n  z?: number;\r\n  width?: number;\r\n  height?: number;\r\n  displayState?: IVisualContainerDisplayState;\r\n}\r\n\r\nexport interface IVisualContainerDisplayState {\r\n  mode: VisualContainerDisplayMode;\r\n}\r\n\r\nexport interface ICustomLayout {\r\n  pageSize?: IPageSize;\r\n  displayOption?: DisplayOption;\r\n  pagesLayout?: PagesLayout;\r\n}\r\n\r\nexport interface IReport {\r\n  id: string;\r\n  displayName: string;\r\n}\r\n\r\nexport enum SectionVisibility {\r\n  AlwaysVisible,\r\n  HiddenInViewMode,\r\n}\r\n\r\nexport interface IPage {\r\n  // unique name of a page.\r\n  name: string;\r\n\r\n  // Display name of a page.\r\n  displayName: string;\r\n\r\n  // True if the page is active.\r\n  isActive?: boolean;\r\n\r\n  // Default is AlwaysVisible.\r\n  visibility?: SectionVisibility;\r\n\r\n  // Page size as saved in the report.\r\n  defaultSize?: ICustomPageSize;\r\n\r\n  // Page display options as saved in the report.\r\n  defaultDisplayOption?: DisplayOption;\r\n}\r\n\r\nexport interface IVisual {\r\n  name: string;\r\n  title: string;\r\n  type: string;\r\n  layout?: IVisualLayout;\r\n}\r\n\r\nexport interface IDatasetBinding {\r\n  datasetId: string;\r\n}\r\n\r\nexport enum Permissions {\r\n  Read = 0,\r\n  ReadWrite = 1,\r\n  Copy = 2,\r\n  Create = 4,\r\n  All = 7\r\n}\r\n\r\nexport enum ViewMode {\r\n  View,\r\n  Edit\r\n}\r\n\r\nexport enum TokenType {\r\n  Aad,\r\n  Embed\r\n}\r\n\r\nexport enum ContrastMode {\r\n  None,\r\n  HighContrast1,\r\n  HighContrast2,\r\n  HighContrastBlack,\r\n  HighContrastWhite\r\n}\r\n\r\nexport type PageView = \"fitToWidth\" | \"oneColumn\" | \"actualSize\";\r\n\r\nexport interface IQnaVisualRenderedEvent {\r\n  question: string;\r\n  normalizedQuestion?: string;\r\n}\r\n\r\nexport interface IVisualCustomCommandEvent {\r\n  visualName: string;\r\n  command: string;\r\n}\r\n\r\nexport interface ISelection {\r\n  visual: IVisual;\r\n  page: IPage;\r\n  report: IReport;\r\n  dataPoints: IIdentityValue<IEqualsDataReference>[];\r\n  regions: IIdentityValue<IEqualsDataReference | IBetweenDataReference>[];\r\n  filters: IFilter[];\r\n}\r\n\r\nexport interface ISwipeEvent {\r\n  currentPosition: IPosition;\r\n  startPosition: IPosition;\r\n}\r\n\r\nexport interface IPosition {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport type Extensions = IExtension[];\r\n\r\nexport interface IExtension {\r\n  command?: ICommandExtension;\r\n}\r\n\r\nexport interface IExtensionItem {\r\n  name: string;\r\n  extend: IExtensionPoints;\r\n}\r\n\r\nexport type CommandExtensionSelector = IVisualSelector | IVisualTypeSelector;\r\n\r\nexport interface ICommandExtension extends IExtensionItem {\r\n  title: string;\r\n  icon?: string;\r\n  selector?: CommandExtensionSelector;\r\n}\r\n\r\n// TODO: ExtensionPoints should extend _.Dictionary<ExtensionPoint>. This will need to add lodash to the project.\r\nexport interface IExtensionPoints {\r\n  visualContextMenu?: IMenuExtension;\r\n  visualOptionsMenu?: IMenuExtension;\r\n}\r\n\r\nexport interface IExtensionPoint {\r\n}\r\n\r\nexport interface IMenuExtension extends IExtensionPoint {\r\n  title?: string;\r\n  icon?: string;\r\n  menuLocation?: MenuLocation;\r\n}\r\n\r\nexport enum MenuLocation {\r\n  Bottom,\r\n  Top\r\n}\r\n\r\nexport interface IBaseTarget {\r\n  table: string;\r\n  $schema?: string;\r\n}\r\n\r\nexport interface IColumnTarget extends IBaseTarget {\r\n  column: string;\r\n}\r\n\r\nexport interface IKeyColumnsTarget extends IColumnTarget {\r\n  keys: string[];\r\n}\r\n\r\nexport interface IKeyHierarchyTarget extends IHierarchyLevelTarget {\r\n  keys: string[];\r\n}\r\n\r\nexport interface IHierarchyLevelTarget extends IBaseTarget {\r\n  hierarchy: string;\r\n  hierarchyLevel: string;\r\n}\r\n\r\nexport interface INotSupportedTarget extends IBaseTarget { }\r\n\r\nexport interface IMeasureTarget extends IBaseTarget {\r\n  measure: string;\r\n}\r\n\r\nexport interface IAggregationTarget {\r\n  aggregationFunction: string;\r\n}\r\n\r\nexport interface IColumnAggrTarget extends IColumnTarget, IAggregationTarget { }\r\n\r\nexport interface IHierarchyLevelAggrTarget extends IHierarchyLevelTarget, IAggregationTarget { }\r\n\r\nexport declare type IKeyTarget = (IKeyColumnsTarget | IKeyHierarchyTarget);\r\nexport declare type ITarget = (IColumnTarget | IHierarchyLevelTarget | IMeasureTarget | INotSupportedTarget | IColumnAggrTarget | IHierarchyLevelAggrTarget);\r\n\r\nexport interface IBaseFilterTarget extends IBaseTarget { }\r\n\r\nexport interface IFilterColumnTarget extends IBaseFilterTarget, IColumnTarget { }\r\n\r\nexport interface IFilterKeyColumnsTarget extends IFilterColumnTarget, IKeyColumnsTarget { }\r\n\r\nexport interface IFilterHierarchyTarget extends IBaseFilterTarget, IHierarchyLevelTarget { }\r\n\r\nexport interface IFilterKeyHierarchyTarget extends IFilterHierarchyTarget, IKeyHierarchyTarget { }\r\n\r\nexport interface INotSupportedFilterTarget extends IBaseFilterTarget, INotSupportedTarget { }\r\n\r\nexport interface IFilterAggregationTarget extends IBaseFilterTarget, IAggregationTarget { }\r\n\r\nexport interface IFilterMeasureTarget extends IBaseFilterTarget, IMeasureTarget { }\r\n\r\nexport interface IFilterColumnAggrTarget extends IFilterColumnTarget, IFilterAggregationTarget { }\r\n\r\nexport interface IFilterHierarchyAggrTarget extends IFilterHierarchyTarget, IFilterAggregationTarget { }\r\n\r\nexport declare type IFilterKeyTarget = (IFilterKeyColumnsTarget | IFilterKeyHierarchyTarget);\r\nexport declare type IFilterTarget = (IFilterColumnTarget | IFilterHierarchyTarget | IFilterMeasureTarget | INotSupportedFilterTarget | IFilterColumnAggrTarget | IFilterHierarchyAggrTarget);\r\nexport type ITupleFilterTarget = IFilterTarget[];\r\nexport type IFilterGeneralTarget = IFilterTarget | IFilterKeyTarget | ITupleFilterTarget;\r\nexport interface IFilter {\r\n  $schema: string;\r\n  target: IFilterGeneralTarget;\r\n  filterType: FilterType;\r\n  displaySettings?: IFilterDisplaySettings;\r\n}\r\n\r\nexport interface IFilterDisplaySettings {\r\n  isLockedInViewMode?: boolean;\r\n  isHiddenInViewMode?: boolean;\r\n  displayName?: string;\r\n}\r\n\r\nexport interface INotSupportedFilter extends IFilter {\r\n  message: string;\r\n  notSupportedTypeName: string;\r\n}\r\n\r\nexport interface IIncludeExcludeFilter extends IFilter {\r\n  values: (string | number | boolean)[];\r\n  isExclude: boolean;\r\n}\r\n\r\nexport interface ITopNFilter extends IFilter {\r\n  operator: TopNFilterOperators;\r\n  itemCount: number;\r\n  orderBy: ITarget;\r\n}\r\n\r\nexport interface IRelativeDateTimeFilter extends IFilter {\r\n  operator: RelativeDateOperators;\r\n  timeUnitsCount: number;\r\n  timeUnitType: RelativeDateFilterTimeUnit;\r\n}\r\n\r\nexport interface IRelativeDateFilter extends IRelativeDateTimeFilter {\r\n  includeToday: boolean;\r\n}\r\n\r\nexport interface IRelativeTimeFilter extends IRelativeDateTimeFilter { }\r\n\r\nexport interface IBasicFilter extends IFilter {\r\n  operator: BasicFilterOperators;\r\n  values: (string | number | boolean)[];\r\n  requireSingleSelection?: boolean;\r\n}\r\n\r\nexport interface IBasicFilterWithKeys extends IBasicFilter {\r\n  target: IFilterKeyTarget;\r\n  keyValues: (string | number | boolean)[][];\r\n}\r\n\r\nexport type PrimitiveValueType = (string | number | boolean);\r\nexport interface ITupleElementValue {\r\n  value: PrimitiveValueType;\r\n  keyValues?: PrimitiveValueType[];\r\n}\r\nexport type TupleValueType = ITupleElementValue[];\r\nexport type TupleFilterOperators = \"In\";\r\nexport interface ITupleFilter extends IFilter {\r\n  $schema: string;\r\n  filterType: FilterType;\r\n  operator: TupleFilterOperators;\r\n  target: ITupleFilterTarget;\r\n  values: TupleValueType[];\r\n}\r\n\r\nexport enum FiltersLevel {\r\n  Report,\r\n  Page,\r\n  Visual\r\n}\r\n\r\nexport type ReportLevelFilters = IBasicFilter | IBasicFilterWithKeys | IAdvancedFilter | IRelativeDateFilter | ITupleFilter | IRelativeTimeFilter;\r\nexport type PageLevelFilters = IBasicFilter | IBasicFilterWithKeys | IAdvancedFilter | IRelativeDateFilter | ITupleFilter | IRelativeTimeFilter;\r\nexport type VisualLevelFilters = IBasicFilter | IBasicFilterWithKeys | IAdvancedFilter | IRelativeDateFilter | ITopNFilter | IIncludeExcludeFilter | IRelativeTimeFilter;\r\nexport type ISlicerFilter = IBasicFilter | IBasicFilterWithKeys | IAdvancedFilter | IRelativeDateFilter | IRelativeTimeFilter;\r\n\r\nexport type TopNFilterOperators = \"Top\" | \"Bottom\";\r\nexport type BasicFilterOperators = \"In\" | \"NotIn\" | \"All\";\r\nexport type AdvancedFilterLogicalOperators = \"And\" | \"Or\";\r\nexport type AdvancedFilterConditionOperators = \"None\" | \"LessThan\" | \"LessThanOrEqual\" | \"GreaterThan\" | \"GreaterThanOrEqual\" | \"Contains\" | \"DoesNotContain\" | \"StartsWith\" | \"DoesNotStartWith\" | \"Is\" | \"IsNot\" | \"IsBlank\" | \"IsNotBlank\";\r\n\r\nexport interface IAdvancedFilterCondition {\r\n  value?: (string | number | boolean | Date);\r\n  operator: AdvancedFilterConditionOperators;\r\n}\r\n\r\nexport interface IAdvancedFilter extends IFilter {\r\n  logicalOperator: AdvancedFilterLogicalOperators;\r\n  conditions: IAdvancedFilterCondition[];\r\n}\r\n\r\nexport enum FilterType {\r\n  Advanced = 0,\r\n  Basic = 1,\r\n  Unknown = 2,\r\n  IncludeExclude = 3,\r\n  RelativeDate = 4,\r\n  TopN = 5,\r\n  Tuple = 6,\r\n  RelativeTime = 7,\r\n}\r\n\r\nexport enum RelativeDateFilterTimeUnit {\r\n  Days = 0,\r\n  Weeks = 1,\r\n  CalendarWeeks = 2,\r\n  Months = 3,\r\n  CalendarMonths = 4,\r\n  Years = 5,\r\n  CalendarYears = 6,\r\n  Minutes = 7,\r\n  Hours = 8\r\n}\r\n\r\nexport enum RelativeDateOperators {\r\n  InLast = 0,\r\n  InThis = 1,\r\n  InNext = 2,\r\n}\r\n\r\nexport abstract class Filter {\r\n  static schema: string;\r\n  protected static schemaUrl: string;\r\n  target: IFilterGeneralTarget;\r\n  filterType: FilterType;\r\n  displaySettings: IFilterDisplaySettings;\r\n  protected schemaUrl: string;\r\n\r\n  constructor(\r\n    target: IFilterGeneralTarget,\r\n    filterType: FilterType) {\r\n    this.target = target;\r\n    this.filterType = filterType;\r\n  }\r\n\r\n  toJSON(): IFilter {\r\n    let filter: IFilter = {\r\n      $schema: this.schemaUrl,\r\n      target: this.target,\r\n      filterType: this.filterType\r\n    };\r\n\r\n    // Add displaySettings only when defined\r\n    if (this.displaySettings !== undefined) {\r\n      filter.displaySettings = this.displaySettings;\r\n    }\r\n\r\n    return filter;\r\n  };\r\n}\r\n\r\nexport class NotSupportedFilter extends Filter {\r\n  static schemaUrl: string = \"http://powerbi.com/product/schema#notSupported\";\r\n  message: string;\r\n  notSupportedTypeName: string;\r\n\r\n  constructor(\r\n    target: IFilterTarget,\r\n    message: string,\r\n    notSupportedTypeName: string) {\r\n    super(target, FilterType.Unknown);\r\n    this.message = message;\r\n    this.notSupportedTypeName = notSupportedTypeName;\r\n    this.schemaUrl = NotSupportedFilter.schemaUrl;\r\n  }\r\n\r\n  toJSON(): INotSupportedFilter {\r\n    const filter = <INotSupportedFilter>super.toJSON();\r\n\r\n    filter.message = this.message;\r\n    filter.notSupportedTypeName = this.notSupportedTypeName;\r\n\r\n    return filter;\r\n  }\r\n}\r\n\r\nexport class IncludeExcludeFilter extends Filter {\r\n  static schemaUrl: string = \"http://powerbi.com/product/schema#includeExclude\";\r\n  values: (string | number | boolean)[];\r\n  isExclude: boolean;\r\n\r\n  constructor(\r\n    target: IFilterTarget,\r\n    isExclude: boolean,\r\n    values: (string | number | boolean)[]) {\r\n    super(target, FilterType.IncludeExclude);\r\n    this.values = values;\r\n    this.isExclude = isExclude;\r\n    this.schemaUrl = IncludeExcludeFilter.schemaUrl;\r\n  }\r\n\r\n  toJSON(): IIncludeExcludeFilter {\r\n    const filter = <IIncludeExcludeFilter>super.toJSON();\r\n\r\n    filter.isExclude = this.isExclude;\r\n    filter.values = this.values;\r\n\r\n    return filter;\r\n  }\r\n}\r\n\r\nexport class TopNFilter extends Filter {\r\n  static schemaUrl: string = \"http://powerbi.com/product/schema#topN\";\r\n  operator: TopNFilterOperators;\r\n  orderBy: ITarget;\r\n  itemCount: number;\r\n\r\n  constructor(\r\n    target: IFilterTarget,\r\n    operator: TopNFilterOperators,\r\n    itemCount: number,\r\n    orderBy: ITarget) {\r\n    super(target, FilterType.TopN);\r\n    this.operator = operator;\r\n    this.itemCount = itemCount;\r\n    this.schemaUrl = TopNFilter.schemaUrl;\r\n    this.orderBy = orderBy;\r\n  }\r\n\r\n  toJSON(): ITopNFilter {\r\n    const filter = <ITopNFilter>super.toJSON();\r\n\r\n    filter.operator = this.operator;\r\n    filter.itemCount = this.itemCount;\r\n    filter.orderBy = this.orderBy;\r\n\r\n    return filter;\r\n  }\r\n}\r\n\r\nexport class RelativeDateFilter extends Filter {\r\n  static schemaUrl: string = \"http://powerbi.com/product/schema#relativeDate\";\r\n  operator: RelativeDateOperators;\r\n  timeUnitsCount: number;\r\n  timeUnitType: RelativeDateFilterTimeUnit;\r\n  includeToday: boolean;\r\n\r\n  constructor(\r\n    target: IFilterTarget,\r\n    operator: RelativeDateOperators,\r\n    timeUnitsCount: number,\r\n    timeUnitType: RelativeDateFilterTimeUnit,\r\n    includeToday: boolean) {\r\n    super(target, FilterType.RelativeDate);\r\n    this.operator = operator;\r\n    this.timeUnitsCount = timeUnitsCount;\r\n    this.timeUnitType = timeUnitType;\r\n    this.includeToday = includeToday;\r\n    this.schemaUrl = RelativeDateFilter.schemaUrl;\r\n  }\r\n\r\n  toJSON(): IRelativeDateFilter {\r\n    const filter = <IRelativeDateFilter>super.toJSON();\r\n\r\n    filter.operator = this.operator;\r\n    filter.timeUnitsCount = this.timeUnitsCount;\r\n    filter.timeUnitType = this.timeUnitType;\r\n    filter.includeToday = this.includeToday;\r\n\r\n    return filter;\r\n  }\r\n}\r\n\r\nexport class RelativeTimeFilter extends Filter {\r\n  static schemaUrl: string = \"http://powerbi.com/product/schema#relativeTime\";\r\n  operator: RelativeDateOperators;\r\n  timeUnitsCount: number;\r\n  timeUnitType: RelativeDateFilterTimeUnit;\r\n\r\n  constructor(\r\n    target: IFilterTarget,\r\n    operator: RelativeDateOperators,\r\n    timeUnitsCount: number,\r\n    timeUnitType: RelativeDateFilterTimeUnit) {\r\n    super(target, FilterType.RelativeTime);\r\n    this.operator = operator;\r\n    this.timeUnitsCount = timeUnitsCount;\r\n    this.timeUnitType = timeUnitType;\r\n    this.schemaUrl = RelativeTimeFilter.schemaUrl;\r\n  }\r\n\r\n  toJSON(): IRelativeTimeFilter {\r\n    const filter = <IRelativeTimeFilter>super.toJSON();\r\n\r\n    filter.operator = this.operator;\r\n    filter.timeUnitsCount = this.timeUnitsCount;\r\n    filter.timeUnitType = this.timeUnitType;\r\n\r\n    return filter;\r\n  }\r\n}\r\n\r\nexport class BasicFilter extends Filter {\r\n  static schemaUrl: string = \"http://powerbi.com/product/schema#basic\";\r\n  operator: BasicFilterOperators;\r\n  values: (string | number | boolean)[];\r\n  keyValues: (string | number | boolean)[][];\r\n  requireSingleSelection: boolean;\r\n\r\n  constructor(\r\n    target: IFilterTarget,\r\n    operator: BasicFilterOperators,\r\n    ...values: ((string | number | boolean) | (string | number | boolean)[])[]\r\n  ) {\r\n    super(target, FilterType.Basic);\r\n    this.operator = operator;\r\n    this.schemaUrl = BasicFilter.schemaUrl;\r\n\r\n    if (values.length === 0 && operator !== \"All\") {\r\n      throw new Error(`values must be a non-empty array unless your operator is \"All\".`);\r\n    }\r\n\r\n    /**\r\n     * Accept values as array instead of as individual arguments\r\n     * new BasicFilter('a', 'b', 1, 2);\r\n     * new BasicFilter('a', 'b', [1,2]);\r\n     */\r\n    if (Array.isArray(values[0])) {\r\n      this.values = <(string | number | boolean)[]>values[0];\r\n    }\r\n    else {\r\n      this.values = <(string | number | boolean)[]>values;\r\n    }\r\n  }\r\n\r\n  toJSON(): IBasicFilter {\r\n    const filter = <IBasicFilter>super.toJSON();\r\n\r\n    filter.operator = this.operator;\r\n    filter.values = this.values;\r\n    filter.requireSingleSelection = !!this.requireSingleSelection;\r\n    return filter;\r\n  }\r\n}\r\n\r\nexport class BasicFilterWithKeys extends BasicFilter {\r\n  keyValues: (string | number | boolean)[][];\r\n  target: IFilterKeyTarget;\r\n\r\n  constructor(\r\n    target: IFilterKeyTarget,\r\n    operator: BasicFilterOperators,\r\n    values: ((string | number | boolean) | (string | number | boolean)[]),\r\n    keyValues: (string | number | boolean)[][]\r\n  ) {\r\n    super(target, operator, values);\r\n    this.keyValues = keyValues;\r\n    this.target = target;\r\n    let numberOfKeys = target.keys ? target.keys.length : 0;\r\n\r\n    if (numberOfKeys > 0 && !keyValues) {\r\n      throw new Error(`You should pass the values to be filtered for each key. You passed: no values and ${numberOfKeys} keys`);\r\n    }\r\n\r\n    if (numberOfKeys === 0 && keyValues && keyValues.length > 0) {\r\n      throw new Error(`You passed key values but your target object doesn't contain the keys to be filtered`);\r\n    }\r\n\r\n    for (let i = 0; i < this.keyValues.length; i++) {\r\n      if (this.keyValues[i]) {\r\n        let lengthOfArray = this.keyValues[i].length;\r\n        if (lengthOfArray !== numberOfKeys) {\r\n          throw new Error(`Each tuple of key values should contain a value for each of the keys. You passed: ${lengthOfArray} values and ${numberOfKeys} keys`);\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  toJSON(): IBasicFilter {\r\n    const filter = <IBasicFilterWithKeys>super.toJSON();\r\n    filter.keyValues = this.keyValues;\r\n    return filter;\r\n  }\r\n}\r\n\r\nexport class TupleFilter extends Filter {\r\n  static schemaUrl: string = \"http://powerbi.com/product/schema#tuple\";\r\n  operator: TupleFilterOperators;\r\n  target: ITupleFilterTarget;\r\n  values: TupleValueType[];\r\n\r\n  constructor(\r\n    target: ITupleFilterTarget,\r\n    operator: TupleFilterOperators,\r\n    values: TupleValueType[]\r\n  ) {\r\n    super(target, FilterType.Tuple);\r\n    this.operator = operator;\r\n    this.schemaUrl = TupleFilter.schemaUrl;\r\n    this.values = values;\r\n  }\r\n\r\n  toJSON(): ITupleFilter {\r\n    const filter = <ITupleFilter>super.toJSON();\r\n    filter.operator = this.operator;\r\n    filter.values = this.values;\r\n    filter.target = this.target;\r\n    return filter;\r\n  }\r\n}\r\n\r\nexport class AdvancedFilter extends Filter {\r\n  static schemaUrl: string = \"http://powerbi.com/product/schema#advanced\";\r\n\r\n  logicalOperator: AdvancedFilterLogicalOperators;\r\n  conditions: IAdvancedFilterCondition[];\r\n\r\n  constructor(\r\n    target: IFilterTarget,\r\n    logicalOperator: AdvancedFilterLogicalOperators,\r\n    ...conditions: (IAdvancedFilterCondition | IAdvancedFilterCondition[])[]\r\n  ) {\r\n    super(target, FilterType.Advanced);\r\n    this.schemaUrl = AdvancedFilter.schemaUrl;\r\n\r\n    // Guard statements\r\n    if (typeof logicalOperator !== \"string\" || logicalOperator.length === 0) {\r\n      // TODO: It would be nicer to list out the possible logical operators.\r\n      throw new Error(`logicalOperator must be a valid operator, You passed: ${logicalOperator}`);\r\n    }\r\n\r\n    this.logicalOperator = logicalOperator;\r\n\r\n    let extractedConditions: IAdvancedFilterCondition[];\r\n    /**\r\n     * Accept conditions as array instead of as individual arguments\r\n     * new AdvancedFilter('a', 'b', \"And\", { value: 1, operator: \"Equals\" }, { value: 2, operator: \"IsGreaterThan\" });\r\n     * new AdvancedFilter('a', 'b', \"And\", [{ value: 1, operator: \"Equals\" }, { value: 2, operator: \"IsGreaterThan\" }]);\r\n     */\r\n    if (Array.isArray(conditions[0])) {\r\n      extractedConditions = <IAdvancedFilterCondition[]>conditions[0];\r\n    }\r\n    else {\r\n      extractedConditions = <IAdvancedFilterCondition[]>conditions;\r\n    }\r\n\r\n    if (extractedConditions.length === 0) {\r\n      throw new Error(`conditions must be a non-empty array. You passed: ${conditions}`);\r\n    }\r\n    if (extractedConditions.length > 2) {\r\n      throw new Error(`AdvancedFilters may not have more than two conditions. You passed: ${conditions.length}`);\r\n    }\r\n    if (extractedConditions.length === 1 && logicalOperator !== \"And\") {\r\n      throw new Error(`Logical Operator must be \"And\" when there is only one condition provided`);\r\n    }\r\n\r\n    this.conditions = extractedConditions;\r\n  }\r\n\r\n  toJSON(): IAdvancedFilter {\r\n    const filter = <IAdvancedFilter>super.toJSON();\r\n\r\n    filter.logicalOperator = this.logicalOperator;\r\n    filter.conditions = this.conditions;\r\n\r\n    return filter;\r\n  }\r\n}\r\n\r\nexport interface IDataReference {\r\n  target: IFilterTarget;\r\n}\r\n\r\nexport interface IEqualsDataReference extends IDataReference {\r\n  equals: string | boolean | number | Date;\r\n}\r\n\r\nexport interface IBetweenDataReference extends IDataReference {\r\n  between: (string | boolean | number)[];\r\n}\r\n\r\nexport interface IValueDataReference extends IDataReference {\r\n  value: string | boolean | number | Date;\r\n  formattedValue: string;\r\n}\r\n\r\nexport interface IIdentityValue<T extends IDataReference> {\r\n  identity: T[];\r\n  values: IValueDataReference[];\r\n}\r\n\r\nexport function isFilterKeyColumnsTarget(target: IFilterTarget): boolean {\r\n  return isColumn(target) && !!(<IFilterKeyColumnsTarget>target).keys;\r\n}\r\n\r\nexport function isBasicFilterWithKeys(filter: IFilter): boolean {\r\n  return getFilterType(filter) === FilterType.Basic && !!(<IBasicFilterWithKeys>filter).keyValues;\r\n}\r\n\r\nexport function getFilterType(filter: IFilter): FilterType {\r\n  if (filter.filterType) {\r\n    return filter.filterType;\r\n  }\r\n\r\n  const basicFilter = filter as IBasicFilter;\r\n  const advancedFilter = filter as IAdvancedFilter;\r\n\r\n  if ((typeof basicFilter.operator === \"string\")\r\n    && (Array.isArray(basicFilter.values))\r\n  ) {\r\n    return FilterType.Basic;\r\n  }\r\n  else if ((typeof advancedFilter.logicalOperator === \"string\")\r\n    && (Array.isArray(advancedFilter.conditions))\r\n  ) {\r\n    return FilterType.Advanced;\r\n  }\r\n  else {\r\n    return FilterType.Unknown;\r\n  }\r\n}\r\n\r\nexport function isMeasure(arg: any): arg is IMeasureTarget {\r\n  return arg.table !== undefined && arg.measure !== undefined;\r\n}\r\n\r\nexport function isColumn(arg: any): arg is IColumnTarget {\r\n  return !!(arg.table && arg.column && !arg.aggregationFunction);\r\n}\r\n\r\nexport function isHierarchyLevel(arg: any): arg is IHierarchyLevelTarget {\r\n  return !!(arg.table && arg.hierarchy && arg.hierarchyLevel && !arg.aggregationFunction);\r\n}\r\n\r\nexport function isHierarchyLevelAggr(arg: any): arg is IHierarchyLevelAggrTarget {\r\n  return !!(arg.table && arg.hierarchy && arg.hierarchyLevel && arg.aggregationFunction);\r\n}\r\n\r\nexport function isColumnAggr(arg: any): arg is IColumnAggrTarget {\r\n  return !!(arg.table && arg.column && arg.aggregationFunction);\r\n}\r\n\r\nexport interface IReportLoadConfiguration {\r\n  accessToken: string;\r\n  id: string;\r\n  groupId?: string;\r\n  settings?: ISettings;\r\n  pageName?: string;\r\n  filters?: ReportLevelFilters[];\r\n  slicers?: ISlicer[];\r\n  permissions?: Permissions;\r\n  viewMode?: ViewMode;\r\n  tokenType?: TokenType;\r\n  bookmark?: IApplyBookmarkRequest;\r\n  theme?: IReportTheme;\r\n  embedUrl?: string;\r\n  datasetBinding?: IDatasetBinding;\r\n  contrastMode?: ContrastMode;\r\n}\r\n\r\nexport interface IReportCreateConfiguration {\r\n  accessToken: string;\r\n  datasetId: string;\r\n  groupId?: string;\r\n  settings?: ISettings;\r\n  tokenType?: TokenType;\r\n  theme?: IReportTheme;\r\n}\r\n\r\nexport interface IDashboardLoadConfiguration {\r\n  accessToken: string;\r\n  id: string;\r\n  groupId?: string;\r\n  pageView?: PageView;\r\n  tokenType?: TokenType;\r\n  embedUrl?: string;\r\n}\r\n\r\nexport interface ITileLoadConfiguration {\r\n  accessToken: string;\r\n  id: string;\r\n  dashboardId: string;\r\n  groupId?: string;\r\n  tokenType?: TokenType;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport interface ISettings {\r\n  background?: BackgroundType;\r\n  bars?: IReportBars;\r\n  bookmarksPaneEnabled?: boolean;\r\n  commands?: ICommandsSettings[];\r\n  customLayout?: ICustomLayout;\r\n  extensions?: Extensions;\r\n  filterPaneEnabled?: boolean;\r\n  hideErrors?: boolean;\r\n  hyperlinkClickBehavior?: HyperlinkClickBehavior;\r\n  layoutType?: LayoutType;\r\n  navContentPaneEnabled?: boolean;\r\n  panes?: IReportPanes;\r\n  persistentFiltersEnabled?: boolean;\r\n  personalBookmarksEnabled?: boolean;\r\n  useCustomSaveAsDialog?: boolean;\r\n  visualRenderedEvents?: boolean;\r\n  visualSettings?: IVisualSettings;\r\n}\r\n\r\nexport interface IReportBars {\r\n  actionBar?: IActionBar;\r\n}\r\n\r\nexport interface IActionBar extends IHideable { }\r\n\r\nexport interface IReportPanes {\r\n  bookmarks?: IBookmarksPane;\r\n  fields?: IFieldsPane;\r\n  filters?: IFiltersPane;\r\n  pageNavigation?: IPageNavigationPane;\r\n  selection?: ISelectionPane;\r\n  syncSlicers?: ISyncSlicersPane;\r\n  visualizations?: IVisualizationsPane;\r\n}\r\n\r\nexport interface IHideable {\r\n  visible?: boolean;\r\n}\r\n\r\nexport interface ICollapsible {\r\n  expanded?: boolean;\r\n}\r\n\r\nexport interface IBookmarksPane extends IHideable { }\r\n\r\nexport interface IFieldsPane extends ICollapsible, IHideable { }\r\n\r\nexport interface IFiltersPane extends ICollapsible, IHideable { }\r\n\r\nexport enum PageNavigationPosition {\r\n  Bottom,\r\n  Left\r\n}\r\n\r\nexport interface IPageNavigationPane extends IHideable {\r\n  position?: PageNavigationPosition;\r\n}\r\n\r\nexport interface ISelectionPane extends IHideable { }\r\n\r\nexport interface ISyncSlicersPane extends IHideable { }\r\n\r\nexport interface IVisualizationsPane extends ICollapsible, IHideable { }\r\n\r\nexport interface ISaveAsParameters {\r\n  name: string;\r\n}\r\n\r\nexport interface IPaginatedReportLoadConfiguration {\r\n  accessToken: string;\r\n  id: string;\r\n  groupId?: string;\r\n  settings?: IPaginatedReportSettings;\r\n  tokenType?: TokenType;\r\n}\r\n\r\nexport interface IPaginatedReportSettings {\r\n  commands?: IPaginatedReportsCommandsSettings;\r\n}\r\n\r\nexport interface IQnaSettings {\r\n  filterPaneEnabled?: boolean;\r\n  hideErrors?: boolean;\r\n}\r\n\r\nexport interface ILoadQnaConfiguration {\r\n  accessToken: string;\r\n  datasetIds: string[];\r\n  groupId?: string;\r\n  question?: string;\r\n  viewMode?: QnaMode;\r\n  settings?: IQnaSettings;\r\n  tokenType?: TokenType;\r\n}\r\n\r\nexport enum QnaMode {\r\n  Interactive,\r\n  ResultOnly,\r\n}\r\n\r\nexport enum ExportDataType {\r\n  Summarized,\r\n  Underlying,\r\n}\r\n\r\nexport enum BookmarksPlayMode {\r\n  Off,\r\n  Presentation,\r\n}\r\n\r\n// This is not an enum because enum strings require\r\n// us to upgrade typeScript version and change SDK build definition\r\nexport const CommonErrorCodes = {\r\n  TokenExpired: 'TokenExpired',\r\n  NotFound: 'PowerBIEntityNotFound',\r\n  InvalidParameters: 'Invalid parameters',\r\n  LoadReportFailed: 'LoadReportFailed',\r\n  NotAuthorized: 'PowerBINotAuthorizedException',\r\n  FailedToLoadModel: 'ExplorationContainer_FailedToLoadModel_DefaultDetails',\r\n};\r\n\r\nexport const TextAlignment = {\r\n  Left: 'left',\r\n  Center: 'center',\r\n  Right: 'right',\r\n};\r\n\r\nexport const LegendPosition = {\r\n  Top: 'Top',\r\n  Bottom: 'Bottom',\r\n  Right: 'Right',\r\n  Left: 'Left',\r\n  TopCenter: 'TopCenter',\r\n  BottomCenter: 'BottomCenter',\r\n  RightCenter: 'RightCenter',\r\n  LeftCenter: 'LeftCenter',\r\n};\r\n\r\nexport interface IQnaInterpretInputData {\r\n  question: string;\r\n  datasetIds?: string[];\r\n}\r\n\r\nexport interface IReportBookmark {\r\n  name: string;\r\n  displayName: string;\r\n  state?: string;\r\n  children?: IReportBookmark[];\r\n}\r\n\r\nexport interface IPlayBookmarkRequest {\r\n  playMode: BookmarksPlayMode;\r\n}\r\n\r\nexport interface IAddBookmarkRequest {\r\n  state?: string;\r\n  displayName?: string;\r\n  apply?: boolean;\r\n}\r\n\r\nexport type IApplyBookmarkRequest = IApplyBookmarkStateRequest | IApplyBookmarkByNameRequest;\r\n\r\nexport interface IApplyBookmarkStateRequest {\r\n  state: string;\r\n}\r\n\r\nexport interface IApplyBookmarkByNameRequest {\r\n  name: string;\r\n}\r\n\r\nexport interface IExportDataRequest {\r\n  rows?: number;\r\n  exportDataType?: ExportDataType;\r\n}\r\n\r\nexport interface IExportDataResult {\r\n  data: string;\r\n}\r\nexport interface ICreateVisualRequest {\r\n  visualType: string;\r\n  layout?: IVisualLayout;\r\n  autoFocus?: boolean;\r\n}\r\nexport interface IVisualResponse {\r\n  visual: IVisual;\r\n}\r\nexport interface ICreateVisualResponse extends IVisualResponse {\r\n}\r\nexport interface ICloneVisualRequest {\r\n  // The filters which will be applied to the new visual. Default: source visual filters.\r\n  filters?: IFilter[];\r\n\r\n  // The layout which will be applied to the new visual.\r\n  // Default: a best effort to put a new visual in an empty space on the canvas.\r\n  layout?: IVisualLayout;\r\n  autoFocus?: boolean;\r\n}\r\n\r\nexport interface ICloneVisualResponse extends IVisualResponse {\r\n  // New visual name\r\n  visualName: string;\r\n}\r\n\r\nexport interface ISortByVisualRequest {\r\n  orderBy: ITarget;\r\n  direction: SortDirection;\r\n}\r\n\r\nexport enum SortDirection {\r\n  Ascending = 1,\r\n  Descending = 2,\r\n}\r\n\r\n/*\r\n * Selectors\r\n */\r\nexport interface ISelector {\r\n  $schema: string;\r\n}\r\n\r\nexport interface IPageSelector extends ISelector {\r\n  pageName: string;\r\n}\r\n\r\nexport interface IVisualSelector extends ISelector {\r\n  visualName: string;\r\n}\r\n\r\nexport interface IVisualTypeSelector extends ISelector {\r\n  visualType: string;\r\n}\r\n\r\nexport interface ISlicerTargetSelector extends ISelector {\r\n  target: SlicerTarget;\r\n}\r\n\r\nexport abstract class Selector implements ISelector {\r\n  public $schema: string;\r\n\r\n  constructor(schema: string) {\r\n    this.$schema = schema;\r\n  }\r\n\r\n  toJSON(): ISelector {\r\n    return {\r\n      $schema: this.$schema\r\n    };\r\n  };\r\n}\r\n\r\nexport class PageSelector extends Selector implements IPageSelector {\r\n  static schemaUrl: string = \"http://powerbi.com/product/schema#pageSelector\";\r\n  public pageName: string;\r\n\r\n  constructor(pageName: string) {\r\n    super(PageSelector.schemaUrl);\r\n    this.pageName = pageName;\r\n  }\r\n\r\n  toJSON(): IPageSelector {\r\n    const selector = <IPageSelector>super.toJSON();\r\n\r\n    selector.pageName = this.pageName;\r\n    return selector;\r\n  }\r\n}\r\n\r\nexport class VisualSelector extends Selector implements IVisualSelector {\r\n  static schemaUrl: string = \"http://powerbi.com/product/schema#visualSelector\";\r\n  public visualName: string;\r\n\r\n  constructor(visualName: string) {\r\n    super(VisualSelector.schemaUrl);\r\n    this.visualName = visualName;\r\n  }\r\n\r\n  toJSON(): IVisualSelector {\r\n    const selector = <IVisualSelector>super.toJSON();\r\n\r\n    selector.visualName = this.visualName;\r\n    return selector;\r\n  }\r\n}\r\n\r\nexport class VisualTypeSelector extends Selector implements IVisualTypeSelector {\r\n  public static schemaUrl: string = \"http://powerbi.com/product/schema#visualTypeSelector\";\r\n  public visualType: string;\r\n\r\n  constructor(visualType: string) {\r\n    super(VisualSelector.schemaUrl);\r\n    this.visualType = visualType;\r\n  }\r\n\r\n  toJSON(): IVisualTypeSelector {\r\n    const selector = <IVisualTypeSelector>super.toJSON();\r\n\r\n    selector.visualType = this.visualType;\r\n    return selector;\r\n  }\r\n}\r\n\r\nexport class SlicerTargetSelector extends Selector implements ISlicerTargetSelector {\r\n  public static schemaUrl: string = \"http://powerbi.com/product/schema#slicerTargetSelector\";\r\n  public target: SlicerTarget;\r\n\r\n  constructor(target: SlicerTarget) {\r\n    super(VisualSelector.schemaUrl);\r\n    this.target = target;\r\n  }\r\n\r\n  toJSON(): ISlicerTargetSelector {\r\n    const selector = <ISlicerTargetSelector>super.toJSON();\r\n\r\n    selector.target = this.target;\r\n    return selector;\r\n  }\r\n}\r\n/*\r\n * Slicers\r\n */\r\nexport type SlicerTarget = IFilterTarget | IFilterKeyTarget;\r\nexport type SlicerSelector = IVisualSelector | ISlicerTargetSelector;\r\n\r\nexport interface ISlicer {\r\n  selector: SlicerSelector;\r\n  state: ISlicerState;\r\n}\r\n\r\nexport interface ISlicerState {\r\n  filters: ISlicerFilter[];\r\n  targets?: SlicerTarget[];\r\n}\r\n\r\n/*\r\n * Visual Settings\r\n */\r\nexport type VisualHeaderSelector = IVisualSelector | IVisualTypeSelector;\r\nexport type VisualsHeaderSelector = VisualHeaderSelector;\r\n\r\nexport interface IVisualHeaderSettings {\r\n  visible?: boolean;\r\n}\r\n\r\nexport interface IVisualHeader {\r\n  settings: IVisualHeaderSettings;\r\n  selector?: VisualHeaderSelector;\r\n}\r\n\r\nexport interface IVisualSettings {\r\n  visualHeaders?: IVisualHeader[];\r\n}\r\n\r\n/*\r\n * Report Theme\r\n */\r\n\r\nexport interface IReportTheme { }\r\n\r\nexport interface ICustomTheme extends IReportTheme {\r\n  themeJson: any;\r\n}\r\n\r\n/*\r\n * Built-in Commands Configuration\r\n */\r\n\r\nexport type VisualCommandSelector = IVisualSelector | IVisualTypeSelector;\r\n\r\nexport enum CommandDisplayOption {\r\n  Enabled,\r\n  Disabled,\r\n  Hidden\r\n}\r\n\r\nexport interface ICommandSettings {\r\n  displayOption: CommandDisplayOption;\r\n  selector?: VisualCommandSelector;\r\n}\r\n\r\nexport interface ICommandsSettings {\r\n  copy?: ICommandSettings;\r\n  drill?: ICommandSettings;\r\n  drillthrough?: ICommandSettings;\r\n  expandCollapse?: ICommandSettings;\r\n  exportData?: ICommandSettings;\r\n  includeExclude?: ICommandSettings;\r\n  removeVisual?: ICommandSettings;\r\n  search?: ICommandSettings;\r\n  seeData?: ICommandSettings;\r\n  sort?: ICommandSettings;\r\n  spotlight?: ICommandSettings;\r\n}\r\n\r\nexport interface IPaginatedReportsCommandSettings {\r\n  enabled: boolean;\r\n}\r\n\r\nexport interface IParametersPanelCommandSettings extends IPaginatedReportsCommandSettings {\r\n  expanded: boolean;\r\n}\r\n\r\nexport interface IPaginatedReportsCommandsSettings {\r\n  parameterPanel?: IParametersPanelCommandSettings;\r\n}\r\n\r\n/*\r\n * Visual CRUD\r\n */\r\n\r\nexport enum VisualDataRoleKind {\r\n  // Indicates that the role should be bound to something that evaluates to a grouping of values.\r\n  Grouping = 0,\r\n\r\n  // Indicates that the role should be bound to something that evaluates to a single value in a scope.\r\n  Measure = 1,\r\n\r\n  // Indicates that the role can be bound to either Grouping or Measure.\r\n  GroupingOrMeasure = 2\r\n}\r\n\r\n// Indicates the visual preference on Grouping or Measure. Only applicable if kind is GroupingOrMeasure.\r\nexport enum VisualDataRoleKindPreference {\r\n  Measure = 0,\r\n  Grouping = 1\r\n}\r\n\r\nexport interface IVisualDataRole {\r\n  // Unique name for the VisualDataRole\r\n  name: string;\r\n\r\n  // Indicates the kind of role.\r\n  kind: VisualDataRoleKind;\r\n\r\n  // Indicates the visual preference on what role kind to use\r\n  kindPreference?: VisualDataRoleKindPreference;\r\n\r\n  // The display name of the role. \r\n  displayName?: string;\r\n\r\n  // The tooltip text \r\n  description?: string;\r\n}\r\n\r\nexport interface IVisualCapabilities {\r\n  // Defines what roles the visual expects, and how those roles should be populated. This is useful for visual generation/editing.\r\n  dataRoles?: IVisualDataRole[];\r\n}\r\n\r\nexport interface IVisualPropertySelector {\r\n  objectName: string;\r\n  propertyName: string;\r\n}\r\n\r\nexport interface IVisualPropertyValue {\r\n  schema?: string;\r\n  value: any;\r\n}\r\n\r\nexport interface IDefaultProperty {\r\n}\r\n\r\nexport interface IThemeColorProperty {\r\n  id: number;\r\n  shade: number;\r\n}\r\n\r\nfunction normalizeError(error: any): IError {\r\n  let message = error.message;\r\n  if (!message) {\r\n    message = `${error.path} is invalid. Not meeting ${error.keyword} constraint`;\r\n  }\r\n  return {\r\n    message\r\n  };\r\n}\r\n\r\nexport function validateVisualSelector(input: any): IError[] {\r\n  let errors: any[] = Validators.visualSelectorValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateSlicer(input: any): IError[] {\r\n  let errors: any[] = Validators.slicerValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateSlicerState(input: any): IError[] {\r\n  let errors: any[] = Validators.slicerStateValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validatePlayBookmarkRequest(input: any): IError[] {\r\n  let errors: any[] = Validators.playBookmarkRequestValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateAddBookmarkRequest(input: any): IError[] {\r\n  let errors: any[] = Validators.addBookmarkRequestValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateApplyBookmarkByNameRequest(input: any): IError[] {\r\n  let errors: any[] = Validators.applyBookmarkByNameRequestValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateApplyBookmarkStateRequest(input: any): IError[] {\r\n  let errors: any[] = Validators.applyBookmarkStateRequestValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateSettings(input: any): IError[] {\r\n  let errors: any[] = Validators.settingsValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validatePanes(input: any): IError[] {\r\n  let errors: any[] = Validators.reportPanesValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateBookmarksPane(input: any): IError[] {\r\n  let errors: any[] = Validators.bookmarksPaneValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateFiltersPane(input: any): IError[] {\r\n  let errors: any[] = Validators.filtersPanesValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateFieldsPane(input: any): IError[] {\r\n  let errors: any[] = Validators.fieldsPanesValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validatePageNavigationPane(input: any): IError[] {\r\n  let errors: any[] = Validators.pageNavigationPaneValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateSelectionPane(input: any): IError[] {\r\n  let errors: any[] = Validators.selectionPaneValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateSyncSlicersPane(input: any): IError[] {\r\n  let errors: any[] = Validators.syncSlicersPaneValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateVisualizationsPane(input: any): IError[] {\r\n  let errors: any[] = Validators.visualizationsPanesValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateCustomPageSize(input: any): IError[] {\r\n  let errors: any[] = Validators.customPageSizeValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateExtension(input: any): IError[] {\r\n  let errors: any[] = Validators.extensionValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateReportLoad(input: any): IError[] {\r\n  let errors: any[] = Validators.reportLoadValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateCreateReport(input: any): IError[] {\r\n  let errors: any[] = Validators.reportCreateValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateDashboardLoad(input: any): IError[] {\r\n  let errors: any[] = Validators.dashboardLoadValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateTileLoad(input: any): IError[] {\r\n  let errors: any[] = Validators.tileLoadValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validatePage(input: any): IError[] {\r\n  let errors: any[] = Validators.pageValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateFilter(input: any): IError[] {\r\n  let errors: any[] = Validators.filtersValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateSaveAsParameters(input: any): IError[] {\r\n  let errors: any[] = Validators.saveAsParametersValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateLoadQnaConfiguration(input: any): IError[] {\r\n  let errors: any[] = Validators.loadQnaValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateQnaInterpretInputData(input: any): IError[] {\r\n  let errors: any[] = Validators.qnaInterpretInputDataValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateExportDataRequest(input: any): IError[] {\r\n  let errors: any[] = Validators.exportDataRequestValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateVisualHeader(input: any): IError[] {\r\n  let errors: any[] = Validators.visualHeaderValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateVisualSettings(input: any): IError[] {\r\n  let errors: any[] = Validators.visualSettingsValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateCommandsSettings(input: any): IError[] {\r\n  let errors: any[] = Validators.commandsSettingsValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n\r\nexport function validateCustomTheme(input: any): IError[] {\r\n  let errors: any[] = Validators.customThemeValidator.validate(input);\r\n  return errors ? errors.map(normalizeError) : undefined;\r\n}\r\n","import { BooleanValidator, ArrayValidator, StringValidator, EnumValidator, NumberValidator, StringArrayValidator, BooleanArrayValidator, NumberArrayValidator } from './typeValidator';\r\nimport { ExtensionValidator, CommandExtensionValidator, ExtensionPointsValidator, MenuExtensionValidator } from '../models/extensionsValidator';\r\nimport { SettingsValidator } from '../models/settingsValidator';\r\nimport { PlayBookmarkRequestValidator, AddBookmarkRequestValidator, ApplyBookmarkByNameRequestValidator, ApplyBookmarkStateRequestValidator } from '../models/bookmarkValidator';\r\nimport {\r\n  FilterColumnTargetValidator,\r\n  FilterKeyColumnsTargetValidator,\r\n  FilterHierarchyTargetValidator,\r\n  FilterKeyHierarchyTargetValidator,\r\n  FilterMeasureTargetValidator,\r\n  ConditionItemValidator,\r\n  RelativeDateFilterValidator,\r\n  RelativeTimeFilterValidator,\r\n  BasicFilterValidator,\r\n  AdvancedFilterValidator,\r\n  TopNFilterValidator,\r\n  NotSupportedFilterValidator,\r\n  IncludeExcludeFilterValidator,\r\n  FilterValidator\r\n} from '../models/filtersValidator';\r\nimport { FieldRequiredValidator } from './fieldRequiredValidator';\r\nimport { AnyOfValidator } from './anyOfValidator';\r\nimport { ReportLoadValidator } from '../models/reportLoadValidator';\r\nimport { ReportCreateValidator } from '../models/reportCreateValidator';\r\nimport { DashboardLoadValidator } from '../models/dashboardLoadValidator';\r\nimport { TileLoadValidator } from '../models/tileLoadValidator';\r\nimport { CustomPageSizeValidator, PageSizeValidator, PageValidator, PageViewFieldValidator } from '../models/pageValidator';\r\nimport { QnaSettingsValidator, QnaInterpretInputDataValidator, LoadQnaValidator } from '../models/qnaValidator';\r\nimport { SaveAsParametersValidator } from '../models/saveAsParametersValidator';\r\nimport { MapValidator } from './mapValidator';\r\nimport { CustomLayoutValidator, VisualLayoutValidator, PageLayoutValidator, DisplayStateValidator } from '../models/layoutValidator';\r\nimport { ExportDataRequestValidator } from '../models/exportDataValidator';\r\nimport { VisualSelectorValidator, VisualTypeSelectorValidator, SlicerTargetSelectorValidator } from '../models/selectorsValidator';\r\nimport { SlicerValidator, SlicerStateValidator } from '../models/slicersValidator';\r\nimport { VisualHeaderSettingsValidator, VisualHeaderValidator, VisualSettingsValidator } from '../models/visualSettingsValidator';\r\nimport { SingleCommandSettingsValidator, CommandsSettingsValidator } from '../models/commandsSettingsValidator';\r\nimport { CustomThemeValidator } from '../models/customThemeValidator';\r\nimport { DatasetBindingValidator } from '../models/datasetBindingValidator';\r\nimport {\r\n  BookmarksPaneValidator,\r\n  FieldsPaneValidator,\r\n  FiltersPaneValidator,\r\n  PageNavigationPaneValidator,\r\n  ReportPanesValidator,\r\n  SelectionPaneValidator,\r\n  SyncSlicersPaneValidator,\r\n  VisualizationsPaneValidator\r\n} from '../models/panesValidator';\r\nimport { ActionBarValidator, ReportBarsValidator } from '../models/barsValidator';\r\n\r\nexport interface IValidationError {\r\n  path?: string;\r\n  keyword?: string;\r\n  message?: string;\r\n}\r\n\r\nexport interface IValidator {\r\n  validate(input: any, path?: string, fieldName?: string): IValidationError[];\r\n}\r\n\r\nexport const Validators = {\r\n  addBookmarkRequestValidator: new AddBookmarkRequestValidator(),\r\n  advancedFilterTypeValidator: new EnumValidator([0]),\r\n  advancedFilterValidator: new AdvancedFilterValidator(),\r\n  anyArrayValidator: new ArrayValidator([new AnyOfValidator([new StringValidator(), new NumberValidator(), new BooleanValidator()])]),\r\n  anyFilterValidator: new AnyOfValidator([new BasicFilterValidator(), new AdvancedFilterValidator(), new IncludeExcludeFilterValidator(), new NotSupportedFilterValidator(), new RelativeDateFilterValidator(), new TopNFilterValidator(), new RelativeTimeFilterValidator()]),\r\n  anyValueValidator: new AnyOfValidator([new StringValidator(), new NumberValidator(), new BooleanValidator()]),\r\n  actionBarValidator: new ActionBarValidator(),\r\n  applyBookmarkByNameRequestValidator: new ApplyBookmarkByNameRequestValidator(),\r\n  applyBookmarkStateRequestValidator: new ApplyBookmarkStateRequestValidator(),\r\n  applyBookmarkValidator: new AnyOfValidator([new ApplyBookmarkByNameRequestValidator(), new ApplyBookmarkStateRequestValidator()]),\r\n  backgroundValidator: new EnumValidator([0, 1]),\r\n  basicFilterTypeValidator: new EnumValidator([1]),\r\n  basicFilterValidator: new BasicFilterValidator(),\r\n  booleanArrayValidator: new BooleanArrayValidator(),\r\n  booleanValidator: new BooleanValidator(),\r\n  bookmarksPaneValidator: new BookmarksPaneValidator(),\r\n  commandDisplayOptionValidator: new EnumValidator([0, 1, 2]),\r\n  commandExtensionSelectorValidator: new AnyOfValidator([new VisualSelectorValidator(), new VisualTypeSelectorValidator()]),\r\n  commandExtensionValidator: new CommandExtensionValidator(),\r\n  commandsSettingsArrayValidator: new ArrayValidator([new CommandsSettingsValidator()]),\r\n  commandsSettingsValidator: new CommandsSettingsValidator(),\r\n  conditionItemValidator: new ConditionItemValidator(),\r\n  contrastModeValidator: new EnumValidator([0, 1, 2, 3, 4]),\r\n  customLayoutDisplayOptionValidator: new EnumValidator([0, 1, 2]),\r\n  customLayoutValidator: new CustomLayoutValidator(),\r\n  customPageSizeValidator: new CustomPageSizeValidator(),\r\n  customThemeValidator: new CustomThemeValidator(),\r\n  dashboardLoadValidator: new DashboardLoadValidator(),\r\n  datasetBindingValidator: new DatasetBindingValidator(),\r\n  displayStateModeValidator: new EnumValidator([0, 1]),\r\n  displayStateValidator: new DisplayStateValidator(),\r\n  exportDataRequestValidator: new ExportDataRequestValidator(),\r\n  extensionArrayValidator: new ArrayValidator([new ExtensionValidator()]),\r\n  extensionPointsValidator: new ExtensionPointsValidator(),\r\n  extensionValidator: new ExtensionValidator(),\r\n  fieldRequiredValidator: new FieldRequiredValidator(),\r\n  fieldsPaneValidator: new FieldsPaneValidator(),\r\n  filterColumnTargetValidator: new FilterColumnTargetValidator(),\r\n  filterConditionsValidator: new ArrayValidator([new ConditionItemValidator()]),\r\n  filterHierarchyTargetValidator: new FilterHierarchyTargetValidator(),\r\n  filterMeasureTargetValidator: new FilterMeasureTargetValidator(),\r\n  filterTargetValidator: new AnyOfValidator([new FilterColumnTargetValidator(), new FilterHierarchyTargetValidator(), new FilterMeasureTargetValidator()]),\r\n  filtersArrayValidator: new ArrayValidator([new AnyOfValidator([new BasicFilterValidator(), new AdvancedFilterValidator(), new RelativeDateFilterValidator(), new RelativeTimeFilterValidator()])]),\r\n  filtersValidator: new FilterValidator(),\r\n  filtersPaneValidator: new FiltersPaneValidator(),\r\n  hyperlinkClickBehaviorValidator: new EnumValidator([0, 1, 2]),\r\n  includeExcludeFilterValidator: new IncludeExcludeFilterValidator(),\r\n  includeExludeFilterTypeValidator: new EnumValidator([3]),\r\n  layoutTypeValidator: new EnumValidator([0, 1, 2, 3]),\r\n  loadQnaValidator: new LoadQnaValidator(),\r\n  menuExtensionValidator: new MenuExtensionValidator(),\r\n  menuLocationValidator: new EnumValidator([0, 1]),\r\n  notSupportedFilterTypeValidator: new EnumValidator([2]),\r\n  notSupportedFilterValidator: new NotSupportedFilterValidator(),\r\n  numberArrayValidator: new NumberArrayValidator(),\r\n  numberValidator: new NumberValidator(),\r\n  pageLayoutValidator: new MapValidator([new StringValidator()], [new VisualLayoutValidator()]),\r\n  pageNavigationPaneValidator: new PageNavigationPaneValidator(),\r\n  pageNavigationPositionValidator: new EnumValidator([0, 1]),\r\n  pageSizeTypeValidator: new EnumValidator([0, 1, 2, 3, 4, 5]),\r\n  pageSizeValidator: new PageSizeValidator(),\r\n  pageValidator: new PageValidator(),\r\n  pageViewFieldValidator: new PageViewFieldValidator(),\r\n  pagesLayoutValidator: new MapValidator([new StringValidator()], [new PageLayoutValidator()]),\r\n  reportBarsValidator: new ReportBarsValidator(),\r\n  reportPanesValidator: new ReportPanesValidator(),\r\n  permissionsValidator: new EnumValidator([0, 1, 2, 4, 7]),\r\n  playBookmarkRequestValidator: new PlayBookmarkRequestValidator(),\r\n  qnaInterpretInputDataValidator: new QnaInterpretInputDataValidator(),\r\n  qnaSettingValidator: new QnaSettingsValidator(),\r\n  relativeDateFilterOperatorValidator: new EnumValidator([0, 1, 2]),\r\n  relativeDateFilterTimeUnitTypeValidator: new EnumValidator([0, 1, 2, 3, 4, 5, 6]),\r\n  relativeDateFilterTypeValidator: new EnumValidator([4]),\r\n  relativeDateFilterValidator: new RelativeDateFilterValidator(),\r\n  relativeTimeFilterTimeUnitTypeValidator: new EnumValidator([7, 8]),\r\n  relativeTimeFilterTypeValidator: new EnumValidator([7]),\r\n  relativeTimeFilterValidator: new RelativeTimeFilterValidator(),\r\n  reportCreateValidator: new ReportCreateValidator(),\r\n  reportLoadValidator: new ReportLoadValidator(),\r\n  saveAsParametersValidator: new SaveAsParametersValidator(),\r\n  selectionPaneValidator: new SelectionPaneValidator(),\r\n  settingsValidator: new SettingsValidator(),\r\n  singleCommandSettingsValidator: new SingleCommandSettingsValidator(),\r\n  slicerSelectorValidator: new AnyOfValidator([new VisualSelectorValidator(), new SlicerTargetSelectorValidator()]),\r\n  slicerStateValidator: new SlicerStateValidator(),\r\n  slicerTargetValidator: new AnyOfValidator([new FilterColumnTargetValidator(), new FilterHierarchyTargetValidator(), new FilterMeasureTargetValidator(), new FilterKeyColumnsTargetValidator(), new FilterKeyHierarchyTargetValidator()]),\r\n  slicerValidator: new SlicerValidator(),\r\n  stringArrayValidator: new StringArrayValidator(),\r\n  stringValidator: new StringValidator(),\r\n  syncSlicersPaneValidator: new SyncSlicersPaneValidator(),\r\n  tileLoadValidator: new TileLoadValidator(),\r\n  tokenTypeValidator: new EnumValidator([0, 1]),\r\n  topNFilterTypeValidator: new EnumValidator([5]),\r\n  topNFilterValidator: new TopNFilterValidator(),\r\n  viewModeValidator: new EnumValidator([0, 1]),\r\n  visualCommandSelectorValidator: new AnyOfValidator([new VisualSelectorValidator(), new VisualTypeSelectorValidator()]),\r\n  visualHeaderSelectorValidator: new AnyOfValidator([new VisualSelectorValidator(), new VisualTypeSelectorValidator()]),\r\n  visualHeaderSettingsValidator: new VisualHeaderSettingsValidator(),\r\n  visualHeaderValidator: new VisualHeaderValidator(),\r\n  visualHeadersValidator: new ArrayValidator([new VisualHeaderValidator()]),\r\n  visualizationsPaneValidator: new VisualizationsPaneValidator(),\r\n  visualLayoutValidator: new VisualLayoutValidator(),\r\n  visualSelectorValidator: new VisualSelectorValidator(),\r\n  visualSettingsValidator: new VisualSettingsValidator(),\r\n  visualTypeSelectorValidator: new VisualTypeSelectorValidator(),\r\n};\r\n","import { IValidator, IValidationError } from './validator';\r\n\r\nexport class ObjectValidator implements IValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    if (typeof input !== \"object\" || Array.isArray(input)) {\r\n      return [{\r\n        message: field !== undefined ? field + \" must be an object\" : \"input must be an object\",\r\n        path: path,\r\n        keyword: \"type\"\r\n      }];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class ArrayValidator implements IValidator {\r\n  constructor(private itemValidators: IValidator[]) {\r\n  }\r\n\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    if (!(Array.isArray(input))) {\r\n      return [{\r\n        message: field + \" property is invalid\",\r\n        path: (path ? path + \".\" : \"\") + field,\r\n        keyword: \"type\"\r\n      }];\r\n    }\r\n\r\n    for (let i = 0; i < input.length; i++) {\r\n      const fieldsPath = (path ? path + \".\" : \"\") + field + \".\" + i;\r\n      for (let validator of this.itemValidators) {\r\n        let errors = validator.validate(input[i], fieldsPath, field);\r\n        if (errors) {\r\n          return [{\r\n            message: field + \" property is invalid\",\r\n            path: (path ? path + \".\" : \"\") + field,\r\n            keyword: \"type\"\r\n          }];\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class TypeValidator implements IValidator {\r\n  constructor(private expectedType: string) {\r\n  }\r\n\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    if (!(typeof input === this.expectedType)) {\r\n      return [{\r\n        message: field + \" must be a \" + this.expectedType,\r\n        path: (path ? path + \".\" : \"\") + field,\r\n        keyword: \"type\"\r\n      }];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class StringValidator extends TypeValidator {\r\n  constructor() {\r\n    super(\"string\");\r\n  }\r\n}\r\n\r\nexport class BooleanValidator extends TypeValidator {\r\n  constructor() {\r\n    super(\"boolean\");\r\n  }\r\n}\r\n\r\nexport class NumberValidator extends TypeValidator {\r\n  constructor() {\r\n    super(\"number\");\r\n  }\r\n}\r\n\r\nexport class ValueValidator implements IValidator {\r\n  public constructor(private possibleValues: (number | string)[]) {}\r\n\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    if (this.possibleValues.indexOf(input) < 0) {\r\n      return [{\r\n        message: field + \" property is invalid\",\r\n        path: (path ? path + \".\" : \"\") + field,\r\n        keyword: \"invalid\"\r\n      }];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class SchemaValidator extends ValueValidator {\r\n  public constructor(private schemaValue: string) {\r\n    super([schemaValue]);\r\n  }\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    return super.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class EnumValidator extends NumberValidator {\r\n  public constructor(private possibleValues: number[]) {\r\n    super();\r\n  }\r\n\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const valueValidator = new ValueValidator(this.possibleValues);\r\n    return valueValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class StringArrayValidator extends ArrayValidator {\r\n  constructor() {\r\n    super([new StringValidator()]);\r\n  }\r\n\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return [{\r\n        message: field + \" must be an array of strings\",\r\n        path: (path ? path + \".\" : \"\") + field,\r\n        keyword: \"type\"\r\n      }];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class BooleanArrayValidator extends ArrayValidator {\r\n  constructor() {\r\n    super([new BooleanValidator()]);\r\n  }\r\n\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return [{\r\n        message: field + \" must be an array of booleans\",\r\n        path: (path ? path + \".\" : \"\") + field,\r\n        keyword: \"type\"\r\n      }];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class NumberArrayValidator extends ArrayValidator {\r\n  constructor() {\r\n    super([new NumberValidator()]);\r\n  }\r\n\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return [{\r\n        message: field + \" must be an array of numbers\",\r\n        path: (path ? path + \".\" : \"\") + field,\r\n        keyword: \"type\"\r\n      }];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class MenuExtensionValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"title\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"icon\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"menuLocation\",\r\n        validators: [Validators.menuLocationValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class ExtensionPointsValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"visualContextMenu\",\r\n        validators: [Validators.menuExtensionValidator]\r\n      },\r\n      {\r\n        field: \"visualOptionsMenu\",\r\n        validators: [Validators.menuExtensionValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class ExtensionItemValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"name\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"extend\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.extensionPointsValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class CommandExtensionValidator extends ExtensionItemValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"title\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"icon\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"selector\",\r\n        validators: [Validators.commandExtensionSelectorValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class ExtensionValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"command\",\r\n        validators: [Validators.commandExtensionValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidator, IValidationError } from './validator';\r\n\r\nexport interface IFieldValidatorsPair {\r\n  field: string;\r\n  validators: IValidator[];\r\n}\r\n\r\nexport class MultipleFieldsValidator implements IValidator {\r\n  public constructor(private fieldValidatorsPairs: IFieldValidatorsPair[]) {}\r\n\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (!this.fieldValidatorsPairs) {\r\n      return null;\r\n    }\r\n\r\n    const fieldsPath = path ? path + \".\" + field : field;\r\n\r\n    for (let fieldValidators of this.fieldValidatorsPairs) {\r\n      for (let validator of fieldValidators.validators) {\r\n        const errors = validator.validate(input[fieldValidators.field], fieldsPath, fieldValidators.field);\r\n        if (errors) {\r\n          return errors;\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class SettingsValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"filterPaneEnabled\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"navContentPaneEnabled\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"bookmarksPaneEnabled\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"useCustomSaveAsDialog\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"extensions\",\r\n        validators: [Validators.extensionArrayValidator]\r\n      },\r\n      {\r\n        field: \"layoutType\",\r\n        validators: [Validators.layoutTypeValidator]\r\n      },\r\n      {\r\n        field: \"customLayout\",\r\n        validators: [Validators.customLayoutValidator]\r\n      },\r\n      {\r\n        field: \"background\",\r\n        validators: [Validators.backgroundValidator]\r\n      },\r\n      {\r\n        field: \"visualSettings\",\r\n        validators: [Validators.visualSettingsValidator]\r\n      },\r\n      {\r\n        field: \"hideErrors\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"commands\",\r\n        validators: [Validators.commandsSettingsArrayValidator]\r\n      },\r\n      {\r\n        field: \"hyperlinkClickBehavior\",\r\n        validators: [Validators.hyperlinkClickBehaviorValidator]\r\n      },\r\n      {\r\n        field: \"bars\",\r\n        validators: [Validators.reportBarsValidator]\r\n      },\r\n      {\r\n        field: \"panes\",\r\n        validators: [Validators.reportPanesValidator]\r\n      },\r\n      {\r\n        field: \"personalBookmarksEnabled\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"persistentFiltersEnabled\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"visualRenderedEvents\",\r\n        validators: [Validators.booleanValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator, EnumValidator } from '../core/typeValidator';\r\n\r\nexport class PlayBookmarkRequestValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"playMode\",\r\n        validators: [Validators.fieldRequiredValidator, new EnumValidator([0, 1])]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class AddBookmarkRequestValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"state\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"displayName\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"apply\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class ApplyBookmarkByNameRequestValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"name\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class ApplyBookmarkStateRequestValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"state\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class FilterColumnTargetValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"table\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"column\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class FilterKeyColumnsTargetValidator extends FilterColumnTargetValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"keys\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringArrayValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class FilterHierarchyTargetValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"table\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"hierarchy\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"hierarchyLevel\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class FilterKeyHierarchyTargetValidator extends FilterHierarchyTargetValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"keys\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringArrayValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class FilterMeasureTargetValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"table\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"measure\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class BasicFilterValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"target\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.filterTargetValidator]\r\n      },\r\n      {\r\n        field: \"operator\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"values\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.anyArrayValidator]\r\n      },\r\n      {\r\n        field: \"filterType\",\r\n        validators: [Validators.basicFilterTypeValidator]\r\n      },\r\n      {\r\n        field: \"requireSingleSelection\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class AdvancedFilterValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"target\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.filterTargetValidator]\r\n      },\r\n      {\r\n        field: \"logicalOperator\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"conditions\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.filterConditionsValidator]\r\n      },\r\n      {\r\n        field: \"filterType\",\r\n        validators: [Validators.advancedFilterTypeValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class RelativeDateFilterValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"target\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.filterTargetValidator]\r\n      },\r\n      {\r\n        field: \"operator\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.relativeDateFilterOperatorValidator]\r\n      },\r\n      {\r\n        field: \"timeUnitsCount\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.numberValidator]\r\n      },\r\n      {\r\n        field: \"timeUnitType\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.relativeDateFilterTimeUnitTypeValidator]\r\n      },\r\n      {\r\n        field: \"includeToday\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"filterType\",\r\n        validators: [Validators.relativeDateFilterTypeValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class RelativeTimeFilterValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"target\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.filterTargetValidator]\r\n      },\r\n      {\r\n        field: \"operator\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.relativeDateFilterOperatorValidator]\r\n      },\r\n      {\r\n        field: \"timeUnitsCount\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.numberValidator]\r\n      },\r\n      {\r\n        field: \"timeUnitType\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.relativeTimeFilterTimeUnitTypeValidator]\r\n      },\r\n      {\r\n        field: \"filterType\",\r\n        validators: [Validators.relativeTimeFilterTypeValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class TopNFilterValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"target\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.filterTargetValidator]\r\n      },\r\n      {\r\n        field: \"operator\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"itemCount\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.numberValidator]\r\n      },\r\n      {\r\n        field: \"filterType\",\r\n        validators: [Validators.topNFilterTypeValidator]\r\n      },\r\n      {\r\n        field: \"orderBy\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.filterTargetValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class NotSupportedFilterValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"target\",\r\n        validators: [Validators.filterTargetValidator]\r\n      },\r\n      {\r\n        field: \"message\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"notSupportedTypeName\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"filterType\",\r\n        validators: [Validators.notSupportedFilterTypeValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class IncludeExcludeFilterValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"target\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.filterTargetValidator]\r\n      },\r\n      {\r\n        field: \"isExclude\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"values\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.anyArrayValidator]\r\n      },\r\n      {\r\n        field: \"filterType\",\r\n        validators: [Validators.includeExludeFilterTypeValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class FilterValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    return Validators.anyFilterValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class ConditionItemValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"value\",\r\n        validators: [Validators.anyValueValidator]\r\n      },\r\n      {\r\n        field: \"operator\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidator, IValidationError } from './validator';\r\n\r\nexport class FieldRequiredValidator implements IValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return [{\r\n        message: field + \" is required\",\r\n        path: (path ? path + \".\" : \"\") + field,\r\n        keyword: \"required\"\r\n      }];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { IValidator, IValidationError } from './validator';\r\n\r\nexport class AnyOfValidator implements IValidator {\r\n  public constructor(private validators: IValidator[]) {}\r\n\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    let valid: boolean = false;\r\n    for (let validator of this.validators) {\r\n      const errors = validator.validate(input, path, field);\r\n      if (!errors) {\r\n        valid = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!valid) {\r\n      return [{\r\n        message: field + \" property is invalid\",\r\n        path: (path ? path + \".\" : \"\") + field,\r\n        keyword: \"invalid\"\r\n      }];\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class ReportLoadValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"accessToken\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"id\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"groupId\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"settings\",\r\n        validators: [Validators.settingsValidator]\r\n      },\r\n      {\r\n        field: \"pageName\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"filters\",\r\n        validators: [Validators.filtersArrayValidator]\r\n      },\r\n      {\r\n        field: \"permissions\",\r\n        validators: [Validators.permissionsValidator]\r\n      },\r\n      {\r\n        field: \"viewMode\",\r\n        validators: [Validators.viewModeValidator]\r\n      },\r\n      {\r\n        field: \"tokenType\",\r\n        validators: [Validators.tokenTypeValidator]\r\n      },\r\n      {\r\n        field: \"bookmark\",\r\n        validators: [Validators.applyBookmarkValidator]\r\n      },\r\n      {\r\n        field: \"theme\",\r\n        validators: [Validators.customThemeValidator]\r\n      },\r\n      {\r\n        field: \"embedUrl\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"datasetBinding\",\r\n        validators: [Validators.datasetBindingValidator]\r\n      },\r\n      {\r\n        field: \"contrastMode\",\r\n        validators: [Validators.contrastModeValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class ReportCreateValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"accessToken\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"datasetId\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"groupId\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"tokenType\",\r\n        validators: [Validators.tokenTypeValidator]\r\n      },\r\n      {\r\n        field: \"theme\",\r\n        validators: [Validators.customThemeValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class DashboardLoadValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"accessToken\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"id\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"groupId\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"pageView\",\r\n        validators: [Validators.pageViewFieldValidator]\r\n      },\r\n      {\r\n        field: \"tokenType\",\r\n        validators: [Validators.tokenTypeValidator]\r\n      },\r\n      {\r\n        field: \"embedUrl\",\r\n        validators: [Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class TileLoadValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"accessToken\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"id\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"dashboardId\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"groupId\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"pageView\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"tokenType\",\r\n        validators: [Validators.tokenTypeValidator]\r\n      },\r\n      {\r\n        field: \"width\",\r\n        validators: [Validators.numberValidator]\r\n      },\r\n      {\r\n        field: \"height\",\r\n        validators: [Validators.numberValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator, StringValidator } from '../core/typeValidator';\r\n\r\nexport class PageSizeValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"type\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.pageSizeTypeValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class CustomPageSizeValidator extends PageSizeValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"width\",\r\n        validators: [Validators.numberValidator]\r\n      },\r\n      {\r\n        field: \"height\",\r\n        validators: [Validators.numberValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class PageValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"name\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class PageViewFieldValidator extends StringValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n    const possibleValues = [\"actualSize\" , \"fitToWidth\" , \"oneColumn\"];\r\n    if (possibleValues.indexOf(input) < 0) {\r\n      return [{\r\n        message: \"pageView must be a string with one of the following values: \\\"actualSize\\\", \\\"fitToWidth\\\", \\\"oneColumn\\\"\"\r\n      }];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class LoadQnaValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"accessToken\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"datasetIds\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringArrayValidator]\r\n      },\r\n      {\r\n        field: \"question\",\r\n        validators: [Validators.stringValidator]\r\n      },\r\n      {\r\n        field: \"viewMode\",\r\n        validators: [Validators.viewModeValidator]\r\n      },\r\n      {\r\n        field: \"settings\",\r\n        validators: [Validators.qnaSettingValidator]\r\n      },\r\n      {\r\n        field: \"tokenType\",\r\n        validators: [Validators.tokenTypeValidator]\r\n      },\r\n      {\r\n        field: \"groupId\",\r\n        validators: [Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class QnaSettingsValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"filterPaneEnabled\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"hideErrors\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class QnaInterpretInputDataValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"datasetIds\",\r\n        validators: [Validators.stringArrayValidator]\r\n      },\r\n      {\r\n        field: \"question\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class SaveAsParametersValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"name\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidator, IValidationError } from './validator';\r\nimport { ObjectValidator } from './typeValidator';\r\n\r\nexport class MapValidator extends ObjectValidator {\r\n  public constructor(private keyValidators: IValidator[], private valueValidators: IValidator[]) {\r\n    super();\r\n  }\r\n\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    let errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    for (let key in input) {\r\n      if(input.hasOwnProperty(key)) {\r\n        const fieldsPath = (path ? path + \".\" : \"\") + field + \".\" + key;\r\n        for (let keyValidator of this.keyValidators) {\r\n          errors = keyValidator.validate(key, fieldsPath, field);\r\n          if (errors) {\r\n            return errors;\r\n          }\r\n        }\r\n        for (let valueValidator of this.valueValidators) {\r\n          errors = valueValidator.validate(input[key], fieldsPath, field);\r\n          if (errors) {\r\n            return errors;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class CustomLayoutValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"pageSize\",\r\n        validators: [Validators.pageSizeValidator]\r\n      },\r\n      {\r\n        field: \"displayOption\",\r\n        validators: [Validators.customLayoutDisplayOptionValidator]\r\n      },\r\n      {\r\n        field: \"pagesLayout\",\r\n        validators: [Validators.pagesLayoutValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class VisualLayoutValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"x\",\r\n        validators: [Validators.numberValidator]\r\n      },\r\n      {\r\n        field: \"y\",\r\n        validators: [Validators.numberValidator]\r\n      },\r\n      {\r\n        field: \"z\",\r\n        validators: [Validators.numberValidator]\r\n      },\r\n      {\r\n        field: \"width\",\r\n        validators: [Validators.numberValidator]\r\n      },\r\n      {\r\n        field: \"height\",\r\n        validators: [Validators.numberValidator]\r\n      },\r\n      {\r\n        field: \"displayState\",\r\n        validators: [Validators.displayStateValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class DisplayStateValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"mode\",\r\n        validators: [Validators.displayStateModeValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class PageLayoutValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"visualsLayout\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.pageLayoutValidator]\r\n      },\r\n      {\r\n        field: \"defaultLayout\",\r\n        validators: [Validators.visualLayoutValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator, NumberValidator, EnumValidator } from '../core/typeValidator';\r\n\r\nexport class ExportDataRequestValidator extends ObjectValidator {\r\n    public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n        if (input == null) {\r\n            return null;\r\n        }\r\n        const errors = super.validate(input, path, field);\r\n        if (errors) {\r\n            return errors;\r\n        }\r\n\r\n        const fields: IFieldValidatorsPair[] = [\r\n            {\r\n                field: \"rows\",\r\n                validators: [new NumberValidator()]\r\n            },\r\n            {\r\n                field: \"exportDataType\",\r\n                validators: [new EnumValidator([0, 1])]\r\n            }\r\n        ];\r\n\r\n        const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n        return multipleFieldsValidator.validate(input, path, field);\r\n    }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\nimport { SchemaValidator } from '../core/typeValidator';\r\n\r\nexport class VisualSelectorValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        // Not required for this selector only - Backward compatibility \r\n        field: \"$schema\",\r\n        validators: [Validators.stringValidator, new SchemaValidator(\"http://powerbi.com/product/schema#visualSelector\")]\r\n      },\r\n      {\r\n        field: \"visualName\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class VisualTypeSelectorValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"$schema\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator, new SchemaValidator(\"http://powerbi.com/product/schema#visualTypeSelector\")]\r\n      },\r\n      {\r\n        field: \"visualType\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class SlicerTargetSelectorValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"$schema\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator, new SchemaValidator(\"http://powerbi.com/product/schema#slicerTargetSelector\")]\r\n      },\r\n      {\r\n        field: \"target\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.slicerTargetValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class SlicerValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"selector\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.slicerSelectorValidator]\r\n      },\r\n      {\r\n        field: \"state\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.slicerStateValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class SlicerStateValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"filters\",\r\n        validators: [Validators.filtersArrayValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class VisualSettingsValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"visualHeaders\",\r\n        validators: [Validators.visualHeadersValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class VisualHeaderSettingsValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"visible\",\r\n        validators: [Validators.booleanValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class VisualHeaderValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"settings\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.visualHeaderSettingsValidator]\r\n      },\r\n      {\r\n        field: \"selector\",\r\n        validators: [Validators.visualHeaderSelectorValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class CommandsSettingsValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"copy\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n      {\r\n        field: \"drill\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n      {\r\n        field: \"drillthrough\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n      {\r\n        field: \"expandCollapse\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n      {\r\n        field: \"exportData\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n      {\r\n        field: \"includeExclude\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n      {\r\n        field: \"removeVisual\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n      {\r\n        field: \"search\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n      {\r\n        field: \"seeData\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n      {\r\n        field: \"sort\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n      {\r\n        field: \"spotlight\",\r\n        validators: [Validators.singleCommandSettingsValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class SingleCommandSettingsValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"displayOption\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.commandDisplayOptionValidator]\r\n      },\r\n      {\r\n        field: \"selector\",\r\n        validators: [Validators.visualCommandSelectorValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class CustomThemeValidator extends ObjectValidator {\r\n    public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n        if (input == null) {\r\n            return null;\r\n        }\r\n        const errors = super.validate(input, path, field);\r\n        if (errors) {\r\n            return errors;\r\n        }\r\n\r\n        const fields: IFieldValidatorsPair[] = [\r\n            {\r\n                field: \"themeJson\",\r\n                validators: [new ObjectValidator()]\r\n            }\r\n        ];\r\n\r\n        const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n        return multipleFieldsValidator.validate(input, path, field);\r\n    }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class DatasetBindingValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"datasetId\",\r\n        validators: [Validators.fieldRequiredValidator, Validators.stringValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class ReportPanesValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"bookmarks\",\r\n        validators: [Validators.bookmarksPaneValidator]\r\n      },\r\n      {\r\n        field: \"fields\",\r\n        validators: [Validators.fieldsPaneValidator]\r\n      },\r\n      {\r\n        field: \"filters\",\r\n        validators: [Validators.filtersPaneValidator]\r\n      },\r\n      {\r\n        field: \"pageNavigation\",\r\n        validators: [Validators.pageNavigationPaneValidator]\r\n      },\r\n      {\r\n        field: \"selection\",\r\n        validators: [Validators.selectionPaneValidator]\r\n      },\r\n      {\r\n        field: \"syncSlicers\",\r\n        validators: [Validators.syncSlicersPaneValidator]\r\n      },\r\n      {\r\n        field: \"visualizations\",\r\n        validators: [Validators.visualizationsPaneValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class BookmarksPaneValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"visible\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class FieldsPaneValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"expanded\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class FiltersPaneValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"visible\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"expanded\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class PageNavigationPaneValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"visible\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n      {\r\n        field: \"position\",\r\n        validators: [Validators.pageNavigationPositionValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class SelectionPaneValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"visible\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class SyncSlicersPaneValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"visible\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class VisualizationsPaneValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"expanded\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n","import { IValidationError, Validators } from '../core/validator';\r\nimport { MultipleFieldsValidator, IFieldValidatorsPair } from '../core/multipleFieldsValidator';\r\nimport { ObjectValidator } from '../core/typeValidator';\r\n\r\nexport class ReportBarsValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"actionBar\",\r\n        validators: [Validators.actionBarValidator]\r\n      }\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}\r\n\r\nexport class ActionBarValidator extends ObjectValidator {\r\n  public validate(input: any, path?: string, field?: string): IValidationError[] {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const errors = super.validate(input, path, field);\r\n    if (errors) {\r\n      return errors;\r\n    }\r\n\r\n    const fields: IFieldValidatorsPair[] = [\r\n      {\r\n        field: \"visible\",\r\n        validators: [Validators.booleanValidator]\r\n      },\r\n    ];\r\n\r\n    const multipleFieldsValidator = new MultipleFieldsValidator(fields);\r\n    return multipleFieldsValidator.validate(input, path, field);\r\n  }\r\n}"],"sourceRoot":""}